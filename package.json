{
  "name": "@brickblock/smart-contracts",
  "version": "5.0.1",
  "description": "Smart contracts for the Brickblock platform",
  "license": "UNLICENSED",
  "engines": {
    "node": ">=8",
    "yarn": ">=1.5.1"
  },
  "repository": {
    "type": "git",
    "url": "git@git.brickblock-dev.io:platform/smart-contracts.git"
  },
  "author": "Brickblock Dev Team <dev@brickblock.io>",
  "scripts": {
    "---SECTION:BLOCKCHAIN---": "-------------------- HOW TO START A LOCAL BLOCKCHAIN --------------------",
    "start:geth": "./scripts/geth/start-geth.sh",
    "---SECTION:BUILD---": "-------------------- HOW TO BUILD THE SMART CONTRACTS --------------------",
    "build:comment": "Compile smart contracts and output into the build/ dir",
    "build": "rimraf build && truffle compile --reset && yarn build:inject-deployed-contracts",
    "build:inject-deployed-contracts:comment": "making the deployed chainid:address pair as configured in .env available to build/contract/Brickblock.json",
    "build:inject-deployed-contracts": "rm -rf deployed-contracts/ && node scripts/inject-deployed-contracts.js",
    "---SECTION:CLEAN---": "-------------------- HOW TO CLEAN OLD BUILD OUTPUT --------------------",
    "clean:comment": "Clean up old contracts and build files",
    "clean:install:comment": "In case there are some dependency issues, a clean install often helps",
    "clean:install": "rimraf node_modules && yarn install",
    "---SECTION:MIGRATE---": "-------------------- HOW TO MIGRATE AND SYNC THE SMART CONTRACTS --------------------",
    "migrate:comment": "Compile smart contracts and output into the build/ dir then deploys our smart contracts to the some network",
    "migrate:dev": "env-cmd .env truffle migrate --network dev --reset",
    "migrate:kovan": "env-cmd .env truffle migrate --network kovan --reset",
    "migrate:ropsten": "env-cmd .env truffle migrate --network ropsten --reset",
    "migrate:rinkeby": "env-cmd .env truffle migrate --network rinkeby --reset",
    "---SECTION:TEST---": "-------------------- HOW TO TEST THE SMART CONTRACTS --------------------",
    "test": "yarn build && env-cmd .env truffle test",
    "test:gas-reporter": "GAS_REPORTER=true yarn test",
    "test:frozen": "env-cmd .env node scripts/test-frozen.js",
    "test:coverage:comment": "Because solidity-coverage is still experimental we won't fail CI if it fails for now",
    "test:coverage": "( yarn solidity-coverage || true ) && open coverage/contracts/index.html",
    "test:mythril:comment": "ConsenSys' security vulnerability scanner for smart contracts",
    "test:mythril": "yarn truffle compile && myth --truffle",
    "test:exr-gas": "env-cmd .env yarn truffle test test/misc/ExchangeRateGasCosts.js",
    "---SECTION:LINT---": "-------------------- HOW TO LINT --------------------",
    "lint": "yarn lint:sol && yarn lint:js",
    "lint:sol": "solium --dir contracts/ --fix",
    "lint:js": "eslint migrations/ scripts/ test/ --fix",
    "---SECTION:RELEASE---": "------------ RELEASE SCRIPTS ------------",
    "release:comment": "This script should only ever be automatically run by our CI. Manual releases are error-prone and can mess up version history",
    "release": "standard-version --message \"chore(release): %s [skip ci]\"",
    "---SECTION:GITHOOKS---": "----------- GITHOOKS ------------",
    "precommit:comment": "Makes sure we don't commit bad code",
    "precommit": "lint-staged",
    "prepush:comment": "Run healthcheck on prepush to ensure no bad code makes it to GitLab",
    "prepush": "yarn health",
    "postmerge:comment": "Automatically run 'yarn install' on postmerge if `yarn.lock` changed",
    "postmerge": "$(pwd)/scripts/post-merge-githook.sh",
    "---SECTION:HOUSEKEEPING---": "-------------------- GITHOOKS, HEALTHCHECK, OPEN TODOS, VULNERABILITY CHECK etc. --------------------",
    "health:comment": "Runs all checks (linters, tests etc) to gauge the overall code health",
    "health": "$(pwd)/scripts/healthcheck.sh",
    "todo:comment": "Prints out all code comments that begin with `TODO:` or `FIXME:`",
    "todo": "leasot '**/*.js' --ignore 'node_modules/**/*','build/**/*','.git/**/*' || true",
    "---SECTION:REPL---": "--- INTERACT WITH DEPLOYED CONTRACTS IN A LOCAL REPL ---",
    "repl:comment": "Useful for quickly interacting with deployed contracts, likely through an INFURA node",
    "repl": "truffle console --network hdwallet",
    "---SECTION:DIAGRAMS---": "--- GENERATE IMAGE ASSETS FOR SMART CONTRACT ECOSYSTEM DIAGRAMS ---",
    "diagram:render:comment": "using the mermaid.cli tool -> there is an online editor here https://mermaidjs.github.io/mermaid-live-editor",
    "diagram:render": "node docs/sequence-diagrams/render.js"
  },
  "lint-staged": {
    "contracts/**/*.sol": [
      "solium --fix -f",
      "git add"
    ],
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "devDependencies": {
    "babel-eslint": "^8.2.1",
    "bignumber.js": "^4.1.0",
    "bunyan": "^1.8.12",
    "bunyan-format": "^0.2.1",
    "chai": "^4.1.1",
    "chalk": "^2.4.0",
    "concurrently": "^3.5.0",
    "env-cmd": "^8.0.2",
    "eslint": "^5.2.0",
    "eslint-config-prettier": "^2.9.0",
    "eslint-plugin-compat": "^2.2.0",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-prettier": "^2.6.0",
    "eslint-plugin-promise": "^3.6.0",
    "eslint-plugin-security": "^1.4.0",
    "eth-gas-reporter": "^0.1.5",
    "ethereumjs-testrpc": "^6.0.1",
    "ethereumjs-util": "^5.1.5",
    "frozen-truffle": "npm:truffle@4.0.1",
    "frozen-zeppelin-solidity": "npm:zeppelin-solidity@1.5.0",
    "ganache-cli": "^6.1.0",
    "husky": "^0.14.3",
    "leasot": "^6.3.0",
    "left-pad": "^1.1.3",
    "lint-staged": "^7.2.0",
    "mermaid.cli": "^0.5.1",
    "openzeppelin-solidity": "1.11.0",
    "prettier": "^1.12.1",
    "ramda": "^0.25.0",
    "rimraf": "^2.6.2",
    "solc": "0.4.24",
    "solidity-coverage": "^0.5.5",
    "solium": "^1.1.8",
    "standard-version": "^4.3.0",
    "table": "^4.0.3",
    "truffle": "4.1.13",
    "truffle-contract": "^3.0.1",
    "truffle-hdwallet-provider": "^0.0.6",
    "web3": "^0.18.4",
    "yargs": "^12.0.1"
  }
}
